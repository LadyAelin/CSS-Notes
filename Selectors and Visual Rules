Specificity is the order by which the browser decides which CSS styles will be displayed. A best practice in CSS is to style elements while using the lowest degree of specificity, so that if an element needs a new style, it is easy to override.

IDs are the most specific selector in CSS, followed by classes, and finally, tags. For example, consider the following HTML and CSS:

<h1 class="headline">Breaking News</h1>


h1 {
  color: red;
}

.headline {
  color: firebrick;
}


The only way to override an ID is to add another ID with additional styling.

To make styles easy to edit, it's best to style with a tag selector, if possible. 
If not, add a class selector. If that is not specific enough, then consider using an ID selector.

In addition to chaining selectors to select elements,
CSS also supports selecting elements that are nested within other HTML elements. For instance, consider the following HTML:

<ul class='main-list'>
  <li> ... </li>
  <li> ... </li>
  <li> ... </li>
</ul>

The nested <li> elements are selected with the following CSS:

.main-list li {

}


There is one thing that is even more specific than IDs: !important. !important can be applied to specific attributes instead of full rules. It will override any style no matter how specific it is. As a result, it should almost never be used. Once !important is used, it is very hard to override.

The syntax of !important in CSS looks like this:

p {
  color: blue !important;
}


.main p {
  color: red;
}


In order to make CSS more concise,
it's possible to add CSS styles to multiple CSS selectors all at once. This prevents writing repetitive code.

h1, 
.menu {
  font-family: Georgia;
}

REVIEWWW:

Throughout this lesson, you learned how to select HTML elements with CSS and apply styles to them. Let's review what you learned:

CSS can change the look of HTML elements. In order to do this, CSS must select HTML elements, then apply styles to them.

CSS can select HTML elements by tag, class, or ID.

Multiple CSS classes can be applied to one HTML element.

Classes can be reusable, while IDs can only be used once.

IDs are more specific than classes, and classes are more specific than tags. That means IDs will override any styles from a class,
and classes will override any styles from a tag selector.

Multiple selectors can be chained together to select an element. This raises the specificity, but can be necessary.

Nested elements can be selected by separating selectors with a space.

The !important flag will override any style, however it should almost never be used, as it is extremely difficult to override.

Multiple unrelated selectors can receive the same styles by separating the selector names with commas.
